package WeekOne;

import java.util.*;

public class ImageOverlap {

    public int largestOverlap(int[][] A, int[][] B) {

        List<int[] > list1 = new ArrayList<>();
        List<int[] > list2 = new ArrayList<>();
        for(int i=0;i<A.length;i++){
            for(int j=0;j<A[0].length;j++){
                if(A[i][j]==1){
                    list1.add(new int[]{i,j});
                }
                if(B[i][j]==1){
                    list2.add(new int[]{i,j});
                }
            }
        }

//        list1.forEach(e->System.out.print(e[0]+" "+e[1]+", "));
//        System.out.println();
//        list2.forEach(e->System.out.print(e[0]+" "+e[1]+", "));
//        System.out.println();
        HashMap<String, Integer> map = new HashMap<>();
        for(int j=0;j<list2.size();j++){
            for(int i=0;i<list1.size();i++){
                int x = list2.get(j)[0]-list1.get(i)[0];
                int y = list2.get(j)[1]-list1.get(i)[1];
                map.put(String.valueOf(x)+","+String.valueOf(y), map.getOrDefault(String.valueOf(x)+","+String.valueOf(y), 0)+1);
            }
        }

        map.forEach((e,v)->System.out.print(e+" "+v+", "));
        System.out.println();
//        Optional<Integer> a = map.values().stream().max(Comparator.naturalOrder());

//        System.out.println(a.get());
        if(map.values().size()==0){
            return 0;
        }

        return map.values().stream().max(Comparator.naturalOrder()).get();
    }

    public static void main(String[] args){
        ImageOverlap im = new ImageOverlap();
//        System.out.println(im.largestOverlap(new int[][]{{1, 1, 0}, {0,1,0}, {0,1,0}}, new int[][]{{0,0,0},{0,1,1},{0,0,1}}));
//        System.out.println(im.largestOverlap(new int[][]{{0}}, new int[][]{{0}}));
        System.out.println(im.largestOverlap(new int[][]{ {0,1,0,1,1,1,0,0,1,0,1,0,1,1,1,1,0,1,0,1,1,1,1,1,1},{1,1,1,1,1,0,1,1,1,1,0,1,0,0,1,0,1,1,1,1,1,1,1,1,1},{1,1,1,0,0,1,0,1,1,0,1,0,1,1,1,1,0,1,1,0,1,1,0,0,1},{1,0,0,0,1,1,0,1,1,0,1,1,1,1,0,1,1,1,0,0,1,1,0,1,1},{1,1,1,1,1,0,1,1,0,1,0,1,1,1,1,1,1,0,1,1,1,1,0,1,0},{1,1,0,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,0,0,1,0,1,1},{0,1,1,1,1,1,1,0,1,1,1,1,0,0,1,1,0,1,1,0,1,1,1,1,1},{1,1,1,1,1,0,1,1,1,0,0,0,1,0,1,1,1,0,1,0,1,1,0,1,1},{0,0,1,0,0,0,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1},{1,1,1,1,1,1,0,1,0,0,0,0,0,0,1,1,1,1,1,1,1,0,1,1,0},{1,1,0,1,1,0,0,0,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,0},{1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,0,0,0,0,1,1,1,1},{1,1,0,1,1,1,1,1,0,1,0,1,1,1,0,1,1,1,1,0,1,1,1,0,1},{1,0,1,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,0,0,1,0,0,1,1},{0,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1},{0,1,0,1,1,0,0,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,0,0},{0,0,0,0,1,1,1,0,1,1,1,0,1,0,1,1,1,0,1,1,1,0,1,1,1},{0,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,0,0,0,0,1,1,1},{0,1,0,1,0,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,0,0,0,1},{1,1,1,1,1,1,1,0,1,1,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1},{0,1,0,0,1,1,1,1,1,0,1,1,0,0,1,1,1,1,1,0,0,1,1,1,1},{0,1,1,0,1,1,0,1,1,1,0,1,0,1,1,1,1,0,1,0,1,1,1,1,1},{1,0,1,1,0,1,1,0,0,1,0,1,1,0,1,1,1,1,0,1,1,1,1,0,1},{0,1,1,1,1,1,1,0,1,1,1,1,0,0,1,0,1,1,1,1,0,1,1,1,0},{1,0,1,1,1,0,0,1,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,0,1}}, new int[][]{{1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,1,1},{0,1,1,1,1,0,1,0,0,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1},{1,1,1,0,0,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,0,1,1,1},{1,1,1,0,1,0,0,1,1,1,1,1,1,1,1,0,0,1,1,1,0,0,1,1,1},{1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,0,1,0},{1,1,1,1,1,0,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1},{1,1,1,1,0,1,1,1,0,1,1,1,0,1,0,0,0,0,1,1,0,1,0,1,1},{0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,0,1,1,1,1,0},{0,1,1,0,1,0,1,1,1,1,0,0,1,0,1,0,0,0,1,1,1,0,1,1,1},{1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1},{1,1,1,1,0,1,1,1,1,1,1,0,0,1,1,1,0,1,0,1,1,1,1,0,1},{1,0,0,1,1,0,1,0,0,0,1,1,1,1,1,1,1,1,0,0,1,0,1,1,0},{1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1},{1,1,0,0,0,1,1,1,1,0,0,1,0,1,0,1,1,1,0,1,1,0,1,1,0},{0,1,1,0,1,0,1,1,1,1,1,0,1,0,1,0,0,1,1,1,1,1,1,1,1},{0,0,1,1,0,1,0,1,1,1,1,0,1,1,1,1,0,1,1,1,0,0,1,1,1},{1,1,1,1,0,1,1,0,1,0,0,1,0,1,1,1,1,0,1,1,1,1,1,1,1},{1,1,0,1,1,0,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0},{1,1,1,1,1,1,1,0,1,0,0,1,1,1,1,0,1,0,1,0,1,1,1,0,1},{0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},{1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1},{1,1,0,0,1,1,0,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1,1,1},{0,1,1,0,1,1,1,1,0,0,1,1,1,1,0,1,0,1,1,1,1,1,0,1,1},{1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,0,1,1,1,1,0,0,1,0,1},{1,1,0,1,1,0,0,0,1,1,0,1,1,0,0,1,1,1,1,1,1,1,1,1,1}
        }));
    }
}
